#
# Simple Python script to convert Android permission info generated by
# PScout (http://pscout.csl.toronto.edu/) into annotation XML for
# consumption by the Android annotation linter.
#

import os
import re
import sys
import lxml.etree as ET

def add_api_call(output_path, class_name, method_signature, permission):
  # determine the output path based on the class name
  path_nodes = class_name.split('.')
  for i in range(len(path_nodes) - 1):
    output_path = os.path.join(output_path, path_nodes[i])
  if not os.path.exists(output_path):
    os.makedirs(output_path)
  output_path = os.path.join(output_path, 'annotations.xml')
  xml_root = ''

  # load existing xml if it exists
  if os.path.exists(output_path):
    parser = ET.XMLParser(remove_blank_text = True)
    xml_tree = ET.parse(output_path, parser)
    xml_root = xml_tree.getroot()
  else:
    print 'creating {0}'.format(output_path)
    xml_root = ET.XML('<root/>')

  outfile = open(output_path, 'w')

  # add the new item node
  item_name = '{0} {1}'.format(class_name, method_signature)
  item_elem = ET.SubElement(xml_root, 'item', name=item_name)

  # add sub-node for the RequiresPermission annotation
  annotation_name = 'android.support.annotation.RequiresPermission'
  annotation_elem = ET.SubElement(item_elem, 'annotation', name=annotation_name)

  # add the sub-node for the specific permission name
  value_name = '"{0}"'.format(permission)
  ET.SubElement(annotation_elem, 'val', name='value', val=value_name)

  # write the updated xml
  outfile.write(ET.tostring(xml_root, encoding = 'UTF-8', xml_declaration = True, pretty_print = True))
  outfile.close()

# main:
infile_name = sys.argv[1]
outpath_name = sys.argv[2]
current_permission = ''

for line in open(infile_name, 'r'):
  match = re.match(r'^Permission:(.+)$', line, 0)
  if (match):
    current_permission = match.group(1)
  else:
    match = re.match(r'^<(\S+):\s+(.+)>$', line, 0)
    if (match):
      add_api_call(outpath_name, match.group(1), match.group(2), current_permission)
